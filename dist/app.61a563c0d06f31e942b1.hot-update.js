webpackHotUpdate("app",{

/***/ "./src/objects/lizard.ts":
/*!*******************************!*\
  !*** ./src/objects/lizard.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Lizard = /** @class */ (function () {\n    function Lizard(x, y, game, id) {\n        var lizRight = game.matter.bodies.rectangle(20, 0, 10, 10, { isSensor: true, label: 'lizard' + id });\n        var lizLeft = game.matter.bodies.rectangle(-20, 0, 10, 10, { isSensor: true, label: 'lizard' + id });\n        var lizardBody = game.matter.bodies.rectangle(0, 0, 40, 50, { label: 'lizard' + id });\n        this.collisionSensor = game.matter.add.sprite(0, 0, 'lizard', null, {\n            isSensor: true,\n            label: 'lizard' + id,\n            ignoreGravity: true,\n        });\n        this.collisionSensor.setIgnoreGravity(true);\n        // const spiderSensor = game.matter.bodies.rectangle(0, 0, 70, 50, { label: 'lizard' });\n        var compound = game.matter.body.create({\n            parts: [lizardBody, lizRight, lizLeft],\n            inertia: Infinity,\n            render: { sprite: { xOffset: 0, yOffset: 0 } },\n        });\n        this.velocity = 1;\n        var lizard = game.matter.add.sprite(0, 0, 'lizard');\n        lizard.setExistingBody(compound);\n        lizard.setPosition(x, y);\n        lizard.setCollisionCategory(0x001);\n        lizard.setCollidesWith(0x0100);\n        console.log(lizard);\n        console.log(lizLeft);\n        lizLeft.collisionFilter.category = 0x0100;\n        this.sprite = lizard;\n        this.createAnims(game);\n        this.sprite.anims.play('lizard', true);\n        this.onFire = false;\n        this.fireSprite = null;\n    }\n    Lizard.prototype.createAnims = function (game) {\n        game.anims.create({\n            key: 'lizard',\n            frames: game.anims.generateFrameNumbers('lizard', { start: 0, end: 29 }),\n            frameRate: 30,\n            repeat: -1,\n        });\n    };\n    Lizard.prototype.flip = function () {\n        this.sprite.flipX = !this.sprite.flipX;\n        this.velocity = -1 * this.velocity;\n    };\n    Lizard.prototype.ignite = function (game) {\n        if (this.onFire) {\n            return;\n        }\n        this.onFire = true;\n        this.fireSprite = game.add.sprite(this.sprite.x, this.sprite.y, 'squareFire');\n        this.fireSprite.play('squareFire', false);\n        this.fireSprite.alpha = 0.7;\n    };\n    Lizard.prototype.syncFire = function () {\n        if (this.onFire) {\n            this.fireSprite.x = this.sprite.x;\n            this.fireSprite.y = this.sprite.y - 10;\n        }\n    };\n    Lizard.prototype.syncSensor = function () {\n        if (this.sprite.active) {\n            this.collisionSensor.position.x = this.sprite.x;\n            this.collisionSensor.position.y = this.sprite.y;\n        }\n    };\n    Lizard.prototype.move = function () {\n        if (this.sprite.active) {\n            this.sprite.setVelocityX(this.velocity);\n        }\n    };\n    return Lizard;\n}());\nexports.default = Lizard;\n\n\n//# sourceURL=webpack:///./src/objects/lizard.ts?");

/***/ })

})